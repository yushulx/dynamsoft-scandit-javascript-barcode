<!DOCTYPE html>
<html>

<head>
    <!-- <style>
        video {
            object-fit: contain;
            width: 640px;
            height: 480px;
        }
    </style> -->
    <script src="https://cdn.jsdelivr.net/npm/dynamsoft-javascript-barcode@7.5.0-v1/dist/dbr.js" data-productKeys="LICENSE-KEY"></script>
</head>

<body>
    <h1>Dynamsoft</h1>
    <div id="performance"></div>
    <input type="file" id="videofile" accept=".mp4" onchange="loadvideo()" />
    <script>
        // Dynamsoft.BarcodeReader._onLog = console.log;
        var log = [["Time Cost (ms)", "Barcode Type", "Barcode Value"]];
        var performanceReport = document.getElementById('performance');
        var barcodereader;
        (async () => {
            barcodereader = await Dynamsoft.BarcodeReader.createInstance();
            await barcodereader.updateRuntimeSettings('speed'); // mode: speed, balance, and coverage
            let settings = await barcodereader.getRuntimeSettings();
            // settings.deblurLevel = 0;
            settings.expectedBarcodesCount = 1
            settings.barcodeFormatIds = Dynamsoft.EnumBarcodeFormat.BF_CODE_128;
            // settings.timeout = 500
            barcodereader.updateRuntimeSettings(settings);
        })();

        var videoContainer;
        var isPlaying = true;
        var ratio = 0.6;
        function decodeVideo(width, height) {
            let canvas = document.createElement('canvas');
            var tmpWidth = width, tmpHeight = height;

            while (tmpWidth > 1000 || tmpHeight > 1000) {
                tmpWidth *= ratio;
                tmpHeight *= ratio; 
            }
            canvas.width = tmpWidth;
            canvas.height = tmpHeight;
            let context = canvas.getContext('2d');
            context.drawImage(videoContainer, 0, 0, width, height, 0, 0, canvas.width, canvas.height);
            let buffer = context.getImageData(0, 0, canvas.width, canvas.height).data;
            let decoding_start = Date.now();
            barcodereader
                .decodeBuffer(
                    buffer,
                    canvas.width,
                    canvas.height,
                    canvas.width * 4,
                    Dynamsoft.EnumImagePixelFormat.IPF_ARGB_8888
                )
                .then((results) => {
                    let decoding_end = Date.now();
                    performanceReport.innerHTML = "<br> Time cost: " + (decoding_end - decoding_start) + " ms <br>";
                    let txts = [];
                    try {
                        let localization;
                        for (var i = 0; i < results.length; ++i) {
                            performanceReport.innerHTML += "Type: " + results[i].BarcodeFormatString + ", Value: " + results[i].BarcodeText + " <br>"
                            txts.push(results[i].BarcodeText);
                            log.push([(decoding_end - decoding_start), results[i].BarcodeFormatString, results[i].BarcodeText]);
                        }
                        let out = txts.join(', ');
                        if (txts.length > 0) {
                            console.log(out + ", time cost: " + (decoding_end - decoding_start));
                        }
                        else {
                            performanceReport.innerHTML += 'No barcode found' + " <br>"
                            console.log('No barcode found');
                        }

                        if (isPlaying) {
                            decodeVideo(width, height);
                        }
                        else {
                            saveAsCSV();
                        }
                    } catch (e) {
                    }


                });
        }

        function loadvideo() {
            let name = document.getElementById('videofile');
            performanceReport.innerHTML = "";

            videoContainer = document.getElementById('videoContainer');
            videoContainer.src = name.files.item(0).name;
            videoContainer.addEventListener("loadedmetadata", function (e) {
                var width = this.videoWidth,
                    height = this.videoHeight;
                console.log(width, height);
            }, false);

            videoContainer.addEventListener("playing", function () {
                isPlaying = true;
                decodeVideo(this.videoWidth, this.videoHeight);
            });

            videoContainer.addEventListener("pause", function () {
                isPlaying = false;
            });
        };

        function saveAsCSV() {
            let csvContent = "data:text/csv;charset=utf-8," + log.map(e => e.join(",")).join("\n");
            var encodedUri = encodeURI(csvContent);
            var link = document.createElement("a");
            link.setAttribute("href", encodedUri);
            link.setAttribute("download", "dbr_test_" + Date.now() + ".csv");
            link.click();
        }
    </script>
    <div>
        <video muted autoplay id="videoContainer" controls></video>
    </div>
</body>

</html>